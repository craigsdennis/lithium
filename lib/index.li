declare('declare')
declare('macro')
macro('SingleLineComment', 'Token("#") ({Anything - NewLine}) NewLine', function([comment], return(Call('comment', [comment]))))

# Ah, that's better, single line comments exist now.

# More macros needed (!)

macro('MacroDeclaration', )

import Buffer from 'buffer'

# The allocate() and free() functions are no longer available to any code running.
# The Buffer class must be used to manipulate raw memory.
allocate = undefined
free = undefined

function add(lhs, rhs)
	try
		# Try and add these two using the lhs's add method.
		return lhs[Symbol.add](rhs)
	try 
		# See if the rhs can add these two operands.
		return rhs[Symbol.add](lhs)
	rescue
		# Give up.
		raise new TypeError("Can't add these two types.")

function subtract(lhs, rhs)
	try
		return lhs[Symbol.subtract](rhs)
	try
		return rhs[Symbol.subtract](lhs)
	rescue
		raise new TypeError("Can't subtract these two types.")

function multiply(lhs, rhs)
	try
		return lhs[Symbol.multiply](rhs)
	try
		return rhs[Symbol.multiply](lhs)
	rescue
		raise new TypeError("Can't multiply these two types.")

function divide(lhs, rhs)
	try
		return lhs[Symbol.divide](rhs)
	try
		return rhs[Symbol.divide](lhs)
	catch
		raise new TypeError("Can't multiply these two types.")

import * from ''