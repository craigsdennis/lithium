use MD5 as md5

string g_empty_element_suffix = " />"
integer g_tab_width = 4

Regex g_nested_brackets

g_nested_brackets = '(?>[^\[\]]+|\[(??{' + g_nested_brackets + '})\])*'

Map g_escape_table
string[] characters = '\\`*_{}[]()>#+-.!'.split('')

for(int i = 0, i < characters.length, i = i+1)
	g_escape_table[characters[i]] = md5.hex(characters[i])

Map g_urls
Map g_titles
Map g_html_blocks

int g_list_level = 0

function toHTML(string text)

	Map g_urls
	Map g_titles
	Map g_html_blocks

	text.replace("\r\n", "\n")
	text.replace("\r", "\n")

	text = text + "\n\n"

	text = this._Detab(text)

	text.replace( (new RegExp('^[ \t]+$/')), '')

	text = this._HashHTMLBlocks(text)
	text = this._StripLinkDefinitions(text)
	text = this._RunBlockGamut(text)
	text = this._UnescapeSpecialChars(text)

	return string text

function _StripLinkDefinitions(string text)

	int less_than_tab = g_tab_width - 1

	while()

package.toHTML = toHTML