export default class Object

	[Symbol.constructor]()

	[Symbol.destructor]()

	# Core 
	[Symbol.get](property)
		return get(this, property)
	[Symbol.set](property, value)
		return 

	# Equality and identity operators.
	[Symbol.equal](rhs)
		return this[Symbol.is](rhs)
	[Symbol.is](rhs)
		return same(this, rhs)
	[Symbol.isA](rhs)

	# No iterator for Objects at the moment.
	[Symbol.iterator]()
		raise new TypeError("You can't iterator over an Object.")
	[Symbol.observer]()
		raise new TypeError("You can't observe an Object.")

	# All mathematical operators will fail by default. Number overrides these.
	[Symbol.add](rhs)
		raise new TypeError("You can't add two objects.")
	[Symbol.subtract](rhs)
		raise new TypeError("You can't subtract two objects.")
	[Symbol.multiply](rhs)
		raise new TypeError("You can't multiply two objects.")
	[Symbol.divide](rhs)
		raise new TypeError("You can't divide two objects.")

		return Symbol.reference