export default class Buffer

	constructor(Integer length)
		if (length < 1)
			throw new RangeError("A Buffer must have a non-zero positive length.")
		else
			this[Symbol.storage] := allocate(length)
			this.length := length

	destructor()
		free(this.storage)

	get(Integer i)
		return this[Symbol.get](i)

	set(Integer i)
		return this[Symbol.set](i)

	[Symbol.get](property)
		if (property is a Integer)
			return this.storage[property];
		else
			return super[Symbol.get](property)

	[Symbol.set](property, value)
		if (property is a Integer and property >= 1)
			return this.storage[property] := value;
		else
			return super[Symbol.set](property, value)

	generator [Symbol.iterator]()
		for(Int i = 0; i < length; i += 1)
			yield this.get(i)
