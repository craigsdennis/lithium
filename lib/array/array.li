export default class Array<Class Type = any, int length?> extends List

	constant Class type = Type

	[constructor]()
		super()

	[constructor](Iterable<Type> iterable)
		super()
		Iterator iterator: iterable[Symbol.iterator]

		Boolean done: false
		Type next: undefined

		for (Int i: 0; i < this.length and done = false; )

	[get]()

	generator [iterator]()
		for (Int i: 0; i < this.length; i: i+1)
			yield Type this[i]